C     ===================================
      SUBROUTINE GETSINISTRA(XV,YEAR_TMP)
C     ===================================
C
C -------------------------------------------------------------
C --- Run SINISTRA.                                         ---
C --- Select "best" candidate.                              ---
C --- Fill electron candidate.                              ---
C -------------------------------------------------------------

      IMPLICIT NONE

#include "partap.inc"
#include "caltru.inc"
#include "sidat95.inc"
c#include "ctrlcm.inc"
#include "vctpar.inc"
#include "vctrhl.inc"
#include "const.inc"
#include "ZufosNT.inc"
#include "common.inc"

      LOGICAL      FIRST, trk_use
      DATA         FIRST / .TRUE. /
      INTEGER      J,K, best_trk_index, Iopt
      INTEGER      comp_Ecand
      INTEGER      l, m
      REAL         XV(3), CALPOS(3), SPOS(3),SRTDC(20), ECALlocal
      REAL         TRKPOS(3), TRACK_P, R_DIST, RCUT, trk_cone
      REAL         Cx, Cy, Cz, min_dca, dist, r_el, r_ce
      REAL         TRK_ISO1, TRK_ISO2, cal_energy
      REAL         XX, YY, ZZ, RAD, THETA, PHI_ANG
      REAL*8       SM2,D_EE,D_EP,X,Y,Q2,W2
      REAL         ESRTD, ECORR,RDIST
      INTEGER      INDEX, YEAR_TMP
      INTEGER      IDCLU
      INTEGER      IERR, I, Ierr3
      REAL         EE_CUT
      DATA         EE_CUT / 4.0 /
      REAL         Radius(1)
      INTEGER      Ncones
      REAL         EInDummy(100), ENotInDummy(100)
      INTEGER      FBR, VBR
      REAL         tmp_x, tmp_y, tmp_z, PHI, ECorr1, ECorr2
      REAL         DCA_min, DistCA, DCATerr, DCACerr,
     &             Coord(3), DCoord(3)
      real      SINISTRACUT

      SINISTRACUT = 0.5

      IF (FIRST) THEN
          FIRST = .FALSE.
          WRITE(*,*) ' *********** SINISTRA 95 ******** '
          WRITE(*,*) ' CUT VALUE ---------- ',SINISTRACUT
          WRITE(*,*) ' ******************************** '
          DO I=1,20
            SRTDC(I) = 0.0
          ENDDO
      ENDIF

      CALL SIRA95(XV,SINISTRACUT, IERR)

      IF (Ierr .NE. 0)  then
         cal_ee = -999.
         RETURN
      end if

c ----------------------------------------------
c Use Findis option 1. At low Q**2 most 
c events are by beam pipe and do not have
c tracks.
c ----------------------------------------------
      CALL FINDIS95(1, SINISTRACUT, Icand, Ierr)

      if (Ierr.ne.0) then
         cal_ee = -999.
         return
      end if
     
      comp_Ecand = Icand
      CANDID = ncand

c ---------------------------------------
c If electron found go on and get useful 
c stuff from SINISTRA, hadronic stuff from
c ZufosNT and CorandCut and SRTD info.
c ---------------------------------------
      IF (ICand .GT. 0) THEN

C ---   Do tower to cell island splitting if  ---
C ---   within 60cm of RCAL beam pipe         ---
         IF ((CANDAT(5,Icand) .LT. -140.0) .AND.
     &        (CANDAT(3,Icand)**2 + CANDAT(4,Icand)**2) .LT.3600) THEN
            CALL Tow_to_cIsland(XV,Icand, Ierr)
         ENDIF

C ---------------------------------
C ---   Calorimeter information ---
C ---------------------------------
         EPROB  = CANDAT(1,Icand)
         CAL_EE = CANDAT(2,Icand)
         CAL_XP = CANDAT(3,Icand)
         CAL_YP = CANDAT(4,Icand)
         CAL_ZP = CANDAT(5,Icand)
         ECELNR = POSDAT(3,Icand)

C ---   temp. storage of cell numbers for hadronic variables ---
         DO I=1,ECELNR
            ELCELLS(I,1) = POSDAT(3+I,Icand)
            CellList(I)   = POSDAT(3+I,Icand) !!! List for E-isol. code
         ENDDO

C ---------------------------
C ---   Do Track matching ---
C ---------------------------
         CALL TRK_ISO(INT(CANDAT(17,Icand)), trk_cone)
         TRK_I  = trk_cone
c ----------------------------
c Track x, y, z at CAL.
c ----------------------------
         TRK_X  = CANDAT(12,Icand)
         TRK_Y  = CANDAT(13,Icand)
         TRK_Z= CANDAT(14,Icand)
c ----------------------------
c Energy of track
c ----------------------------
         TRK_P  = CANDAT(11,Icand)
         TRK_N  = CANDAT(15,Icand)
         TRK_V  = CANDAT(16,Icand)
c ----------------------------
c Distance Closest Approach
c 3D
         TRK_D  = CANDAT(18,Icand)
c 2D
         TRK_C  = CANDAT(19,Icand)
c ----------------------------
c Theta angle in radians
c ----------------------------
         TRK_T  = CANDAT(20,Icand)
c ----------------------------
c TRK X, Y, Z, P, D used later 
c for best x/y/z
C -----------------------------------
C ---   electron cone isolation ? ---
C -----------------------------------
         NrEcells   = ECELNR
         IF (TRK_D .GE.0.0    .and.
     &        CAL_ZP.GT.-130.0 .and.
     &        CAL_ZP.LT. 200.0) THEN
            CALPOS(1)  = TRK_X
            CALPOS(2)  = TRK_Y
            CALPOS(3)  = TRK_Z
            trk_use    = .true.
         ELSE
            CALPOS(1)  = CAL_XP
            CALPOS(2)  = CAL_YP
            CALPOS(3)  = CAL_ZP
            trk_use    = .false.
         ENDIF
         Radius(1)  = 0.8       !!! cone around electron
         Ncones     = 1         !!! test only one cone
         
         CALL IsoCones(CALPOS,   Radius, Ncones, XV,
     &        CellList, NrEcells,
     &        EInDummy, ENotInDummy,RElec,
     &        EMCenrgy,HACenrgy)
         
         EInList   = EInDummy   (1)
         ENotInList = ENotInDummy(1)
         
         tmp_x = CALPOS(1) - XV(1)
         tmp_y = CALPOS(2) - XV(2)
         tmp_z = CALPOS(3) - XV(3)
         THETA = ATan2(sqrt(tmp_x**2 + tmp_y**2), tmp_z)
         PHI   = atan2(tmp_y,tmp_x)
         
         IF     (CALPOS(3).lt.-130.0) THEN !!! electron in RCAL
            FBR = 3
            VBR = 2
         ELSEIF (CALPOS(3).lt. 200.0) THEN !!! electron in BCAL
            FBR = 2
            VBR = 3
         ELSE                   !!! electron in FCAL
            FBR = 1
            VBR = 1
         ENDIF

         cal_energy = cal_ee
c         CALL emEnergyCorrection(ECorr1, ECorr2,  cal_energy,
c     &        FBR, THETA, PHI,
c     &        CalPos,  trk_use , XV(3))
c         ECOR1(1) = ECorr1
c         ECOR2(1) = ECorr2

C --------------------------
C ---   SRTD information ---
C --------------------------
         ECALlocal       = cal_ee
         CALL SRTDELEC(XV,CALPOS,ECALlocal,SRTDC,
     1        IDCLU,SPOS,ESRTD,ECORR,RDIST,Ierr)
         SRTD_X = SPOS(1)
         SRTD_Y = SPOS(2)
         SRTD_Z = SPOS(3)
         SRTD_E = ESRTD
         SRTD_ECOR = ECORR
         POSECO = FLOAT(Ierr)
     
C -------------------------
C ---   HES information ---
c X, Y from HESCLU
c -------------------------
         HES_X  = CANDAT( 8,Icand)
         HES_Y  = CANDAT( 9,Icand)  
c -------------------------
c Ehes from HESCLU
c -------------------------
         HES_E  = CANDAT( 7,Icand)
         HES_R  = CANDAT(10,Icand)
         HES_F  = CANDAT( 6,Icand)
 
      else 

         cal_ee = -999.

      end if
      
      RETURN
      END





