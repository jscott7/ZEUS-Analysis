
C     =================
      SUBROUTINE MR2FIL
C     =================
C     This routine deal with Monte Carlo specific quantites such as
C     the generated event kinematics, ISR/FSR photon parameters, the
C     generated event vertex, the Xsection generated by the MC program
C     etc.
C
C     A.Quadt, May 1997.
C     ------------------------------------------------------------------

      IMPLICIT NONE

#include "partap.inc"
#include "lepkin.inc"
#include "defgencm.inc"
#include "fmckin.inc"
#include "usgevt.inc"
#include "usgrun.inc"
#include "const.inc"
#include "fmcvtx.inc"
c#include "ctrlcm.inc"
#include "common.inc"

      LOGICAL  OK
      REAL     TH_E, SPX, SPY, EPLFM, DISMIN
      REAL     S, YJB, Q2JB, EG, SN, SA, YP
      REAL     SIG1,SIG2,SIG3,SIG4,SIG5,SIG6,SIG7,SIG8,SIG9,SIG10
      REAL     gm_phi,gm_theta,gm_x,gm_y,gm_z,gm_e   !!! photon variables
      INTEGER  ICHA,IPAPRT,IPACOD,IDELSA,ISTUD
      INTEGER  IC, NO_USE, KID, ICHECK
      character*4 jpsnull
      DATA     IC     / 0 /
      DATA     DISMIN / 100.0 /
      DATA     NO_USE / -999.99 /
      integer ifirst
      data    ifirst / .false. /

      MCELE   = NO_USE
      ET_MC   = NO_USE

      YDA_MC  = NO_USE
      XDA_MC  = NO_USE
      Q2DA_MC = NO_USE

      MC_XV   = NO_USE
      MC_YV   = NO_USE
      MC_ZV   = NO_USE

      EVT_WT  = 1.0       !!! event weight (currently not varied...)

      HCL_ENEE = NO_USE
      HCL_PXEE = NO_USE
      HCL_PYEE = NO_USE
      HCL_PZEE = NO_USE

c      HCL_ENEG = 0.0
c      HCL_PXEG = 0.0
c      HCL_PYEG = 0.0
c      HCL_PZEG = 0.0
c ------------------------------------------------
c Call defgen to determine the MC generator used.
c ------------------------------------------------
      if (ifirst) then
         call defgen(jpsnull)
         write(6,*) 'GENERATOR USED :', GENKEY
         ifirst = .false.
      end if

c     genid = 0
c      if (GENKEY.eq.'HL6') then 
c         genid = 1
c      else if (GENKEY.eq.'RAP') then
c         genid = 2
c      else
c         genid = 0
c      end if

      CALL VGKIN(GENKEY)

C -----------------------
C --- FMCKIN electron ---
C -----------------------
      FMCKIN_ID = IDELSC

      CALL GETTAB (FMCKIN)
      OK = .TRUE.

      IC = IC + 1

      HCL_ENEE = FMCKIN_P(4)
      HCL_PXEE = FMCKIN_P(1)
      HCL_PYEE = FMCKIN_P(2)
      HCL_PZEE = FMCKIN_P(3)

      MCELE    = FMCKIN_P(4)
      IF (ABS(FMCKIN_P(3)/FMCKIN_P(4)).GT.1) THEN
        WRITE(*,*) ' --**--** -- SC-EL (FMCKIN) : PZ > ENERGY ----- '
        ET_MC = NO_USE
        OK    = .FALSE.
      ELSE
        TH_E  = ACOS(FMCKIN_P(3)/sqrt(FMCKIN_P(1)**2 +
     &                                FMCKIN_P(2)**2 +
     &                                FMCKIN_P(3)**2))
        ET_MC = 180*TH_E/PI
      ENDIF

C ----------------------------
C --- generated kinematics ---
C ----------------------------
      Y_TRU  = YPSTRU
      X_TRU  = XBJTRU
      Q2_TRU = QSQTRU

C ----------------------
C --- FMCKIN hadrons ---
C ----------------------
      SPX   = 0.0
      SPY   = 0.0
      EPLFM = 0.0
      DO KID = COUTAB(FMCKIN),1,-1
C        --- is particle stable ?
         ICHECK = ISTUD(KID,DISMIN,GENKEY,ICHA,IPAPRT,IPACOD,IDELSA)

C --------------------------------------------------------------
C ---- if the particle appears in the final state & not e/g. ---
C --------------------------------------------------------------
         IF(ICHECK .EQ.      1 .AND.
     &      KID    .NE. IDELSC .AND.
     &      KID    .NE. IDBREM) THEN
              CALL FETTAB(FMCKIN,ID,KID)
              EPLFM = EPLFM + (FMCKIN_P(4) - FMCKIN_P(3))
              SPX   = SPX   + FMCKIN_P(1)
              SPY   = SPY   + FMCKIN_P(2)
         ENDIF
      ENDDO

      S   = 4.0*EE*EP
      YJB = EPLFM/(2.0*EE)

      IF (YJB .LT. 0.0 .OR.
     &    YJB .GT. 1.0) OK = .FALSE.

      IF (.NOT.OK) THEN
         WRITE(*,*) '== HCL YJB BLOW OUT .. (E-Pz)_had,Y_JB : ',
     &              EPLFM,YJB
      ENDIF

      IF (OK) THEN
          Q2JB = (SPX**2+SPY**2)/(1.-YJB)
          CALL GETDA (EE,EP,YJB,Q2JB,XDA_MC,Q2DA_MC,YDA_MC,TH_E)
      ENDIF

C -----------------------
C --- ISR/FSR photons ---
C -----------------------
      ICHN = ICHNN          !!! VGKIN ...

C ----------------------------------------
C --- Initial or final state radiation ---
C ----------------------------------------
      IF (ICHN.EQ.6.OR.ICHN.EQ.7) THEN
          HCL_ENEG = SNGL(BREMSG(4))
          HCL_PXEG = SNGL(BREMSG(1))
          HCL_PYEG = SNGL(BREMSG(2))
          HCL_PZEG = SNGL(BREMSG(3))
      ELSE
          HCL_ENEG = 0.0
          HCL_PXEG = 0.0
          HCL_PYEG = 0.0
          HCL_PZEG = 0.0
      ENDIF

C ------------------------------------
C --- generated vertex for MC data ---
C ------------------------------------
      IF (COUTAB(FMCVTX).GT.0) THEN
        CALL FETTAB(FMCVTX,ID,1)
c        if (FMCVtx_Producedby.eq.0) then
           MC_XV = FMCVTX_R(1)
           MC_YV = FMCVTX_R(2)
           MC_ZV = FMCVTX_R(3)
c        else
c           MC_XV = -999.
c           MC_YV = -999.
c           MC_ZV = -999.
c        end if
      ENDIF

C --------------------------
C --- generated Xsection ---
C --------------------------
      IF (COUTAB(USGRUN).GE.3) THEN
          CALL FETTAB(USGRUN,ID,2)
          SIGMA = USGRUN_RPA(1)*1.E3   ! nb --> pb
          CALL FETTAB(USGRUN,ID,3)
          SIG1  = USGRUN_RPA(1)*1.E3
          SIG6  = USGRUN_RPA(6)*1.E3
          SIG7  = USGRUN_RPA(7)*1.E3
          SIG8  = USGRUN_RPA(8)*1.E3
          SIG9  = USGRUN_RPA(9)*1.E3
          SIG10 = USGRUN_RPA(10)*1.E3
      ENDIF

90    FORMAT( ' NP VGKIN Y = ',E8.2,' ACTUAL --- ',E8.2,' EG = ',F6.2)

      RETURN
      END











